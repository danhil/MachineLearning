% Regularized errorJ = J + (lambda / (2*m)) * sum(sum(Theta1(:, 2:end) .^ 2));J = J + (lambda / (2*m)) * sum(sum(Theta2(:, 2:end) .^ 2));% 2. Backpropagate to get gradient information.d3 = a3 - Y;d2 = (transpose(Theta2) * d3) .* [ones(1, m); sigmoidGradient(z2)];Theta2_grad = (1/m) * d3 * transpose(a2);Theta1_grad = (1/m) * d2(2:end, :) * transpose(a1);% Gradient regularizationTheta2_grad = Theta2_grad + ...              (lambda / m) * ([zeros(size(Theta2, 1), 1), Theta2(:, 2:end)]);Theta1_grad = Theta1_grad + ...              (lambda / m) * ([zeros(size(Theta1, 1), 1), Theta1(:, 2:end)]);% Unroll gradientsgrad = [Theta1_grad(:) ; Theta2_grad(:)];end